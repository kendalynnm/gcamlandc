getwd()
# run with GCAM data (see [other script] for example running with other data)
source("gcam_utils.R")
source("C:/Users/morr497/Documents/OneDriveSafeSpace/gcamlandc/run_land_calc.R")
source("land_utils.R")
read_data <- TRUE  # set this flag if land allocation data needs to be updated. If false, will read from saved files
read_params <- TRUE # set this flag if land leaf parameter data needs to be updated (carbon densities, soil timescales, etc). If false, will read from saved files
protected <- FALSE  # set this flag to include protected lands. If true, will read in protected lands data to replace land inputs 2 & 3
year0 <- 1745
last_year <- 2100  # the year to have carbon emissions vectors go through
stop_year <- 2010  # the year to actually stop calculations
ccycling=TRUE  # if TRUE, turns on carbon density calculations at each time step. If FALSE, code uses fixed densities
rhEff=FALSE  # if TRUE, enables Q10 feedback with temperature (affects soil respiration)
betaEff=FALSE  # if TRUE, enables CO2 fertilization feedback (affects NPP)
coupled=TRUE  # this refers to coupling with Hector. If true, then NBP_constraint is set each year for Hector
if (read_data){
# get input data from GCAM
land_roots <- read_land_inputs_xml2(folder="~land_xml")
gcam_land_alloc <- get_gcam_land_alloc(db_name="database_basexdb",
gcam_dir= "~reference",
scenario="Reference", read_from_file=FALSE)  # scenario is doing nothing when read_from_file is TRUE
leaf_data <- process_xml_inputs(land_roots, gcam_land_alloc)
saveRDS(leaf_data,file="data/leaf_data_test.RDS")  # store for future use
# this currently does something weird. Alternative is to just change the land roots in the read_land_inputs_xml2 to either include or not include protected land
if (protected){
input_file <- "~reference/protected_land_input_2.xml"
additional_file <- "~reference/protected_land_input_3.xml"
leaf_data <- add_protected_leaves(leaf_data,input_file,additional_file,gcam_land_alloc)
saveRDS(leaf_data,file="data/protected_leaf_data.RDS")  # store for future use
}
} else {
if (protected){
leaf_data <- readRDS(file="protected_leaf_data.RDS")
} else leaf_data <- readRDS(file="leaf_data.RDS")
}
leaf_data$name <- paste0(leaf_data$region,"_",leaf_data$landleaf)  # add single column with region + leaf info for easier reference later
if (read_data){
# get input data from GCAM
land_roots <- read_land_inputs_xml2(folder="~land_xml")
gcam_land_alloc <- get_gcam_land_alloc(db_name="database_basexdb",
gcam_dir= "~reference",
scenario="Reference", read_from_file=FALSE)  # scenario is doing nothing when read_from_file is TRUE
leaf_data <- process_xml_inputs(land_roots, gcam_land_alloc)
saveRDS(leaf_data,file="data/leaf_data_test.RDS")  # store for future use
# this currently does something weird. Alternative is to just change the land roots in the read_land_inputs_xml2 to either include or not include protected land
if (protected){
input_file <- "~reference/protected_land_input_2.xml"
additional_file <- "~reference/protected_land_input_3.xml"
leaf_data <- add_protected_leaves(leaf_data,input_file,additional_file,gcam_land_alloc)
saveRDS(leaf_data,file="data/protected_leaf_data.RDS")  # store for future use
}
} else {
if (protected){
leaf_data <- readRDS(file="protected_leaf_data.RDS")
} else leaf_data <- readRDS(file="leaf_data.RDS")
}
# get input data from GCAM
land_roots <- read_land_inputs_xml2(folder="~land_xml/")
getwd()
# get input data from GCAM
land_roots <- read_land_inputs_xml2(folder="land_xml")
gcam_land_alloc <- get_gcam_land_alloc(db_name="database_basexdb",
gcam_dir= "reference",
scenario="Reference", read_from_file=FALSE)  # scenario is doing nothing when read_from_file is TRUE
source("C:/Users/morr497/Documents/OneDriveSafeSpace/gcamlandc/run_land_calc.R")
View(gcam_land_alloc)
